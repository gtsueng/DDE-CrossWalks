{
  "@context": {
    "schema": "http://schema.org/",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "owl": "http://www.w3.org/2002/07/owl/",
    "crosswalks": "https://discovery.biothings.io/view/crosswalks/"
  },
  "@graph": [
    {
      "@id": "crosswalks:Property",
      "@type": "rdfs:Class",
      "rdfs:comment": "This is the schema for defining a Property.",
      "rdfs:label": "Property",
      "rdfs:subClassOf": {
        "@id": "schema:Property"
      },
      "$validation": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the property. Note that a property may be heavily nested in one schema, and relatively unnested in another. If a property is heavily nested, use just the unnested property name for this field, and include the hierarchy using the dot notation under 'nestedName'.",
            "type": "string"
          },
          "nestedName": {
            "description": "The nested name of the property. Note that a property may be heavily nested in one schema, and relatively unnested in another. If a property is heavily nested, include the hierarchy using the dot notation for this property, and the unnested property name for 'name'.",
            "type": "string"
          },
          "domainIncludes": {
            "description": "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.",
            "oneOf": [
              {
                "$ref": "#/definitions/classObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/classObject"
                }
              }
            ]
          },
          "rangeIncludes": {
            "description": "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.",
            "oneOf": [
              {
                "$ref": "#/definitions/classObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/classObject"
                }
              }
            ]
          },
          "includesTransform": {
            "oneOf": [
                {
                  "$ref": "#/definitions/transformSpec"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/transformSpec"
                }    
                }
            ]
          },
          "sameAs": {
            "description": "Equivalent properties in other schemas",
            "oneOf": [
              {
                "$ref": "#/definitions/sameAsObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/sameAsObject"
                }
              }
            ]
          },
          "url": {
              "description": "The url to the property in its respective schema. Example, for something like 'dct:conformsTo', it the url would be 'http://purl.org/dc/terms/conformsTo'."
          },
          "isPartOf": {
            "description": "The schema or Data Element set (if it is a mix and match instead of concept set-based) to which this property belongs.",
            "oneOf": [
              {
                "$ref": "#/definitions/schemaObject"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/schemaObject"
                }
              }
            ]
          },
          "cardinality": {
            "description": "The cardinality of this property if available as defined in its respective schema. Note, that a schema may have multiple classes and the cardinality of the property may vary based on class, if this is the case the cardinality should be considered 'variable'. If it is not defined in a schema (like in schema.org), it should be considered 'unspecified.",
            "type": "string",
            "enum": [
              "one",
              "many",
              "variable",
              "unspecified"
            ]
          },
          "marginality": {
            "description": "The marginality of the property as defined in its respective schema. Note that a schema may include multiple classes and the marginality for the same property may vary between classes within the same schema. If this is the case, use: 'variable'. Otherwise, if the marginality is not specified like in schema.org, use 'unspecified'.",
            "type": "string",
            "enum": [
              "minimal or required",
              "recommended",
              "optional",
              "variable",
              "unspecified"
            ]
          }
        },
        "required": [
          "name",
          "isPartOf",
          "nestedName"
        ],
        "recommended": [
          "marginality",
          "cardinality",
          "rangeIncludes",
          "domainIncludes",
          "url"
        ],
        "optional": [
          "sameAs",
          "includesTransform"
        ],
        "definitions": {
          "transformSpec": {
            "description": "The transofrmation needed to convert the value of the subjcted property to the mapped target property.",
            "@type": "crosswalks:DataTransformer",
            "type": "object",
            "properties": {
              "pattern": {
                "description": "The regular expression or regex pattern used for text transformations if used in lieu or in combination with a normalization, conversion, or transformation script",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              },
              "version": {
                "description": "version of the normalizer, converter, or transformation script",
                "type": "string"
              },
              "description": {
                "description": "A description of the item.",
                "type": "string"
              },
              "name": {
                "description": "Name of the normalizer, converter, or transformation specification",
                "type": "string"
              },
              "url": {
                "description": "URL of the transformation script if available",
                "type": "string",
                "format": "uri"
              }
            },
            "required": []
          },
          "classObject": {
            "description": "A schema class or type.",
            "@type": "schema:Class",
            "type": "object",
            "properties": {
              "name": {
                "description": "The name of the class or type.",
                "type": "string"
              },
              "url": {
                "description": "Url for the class or type",
                "type": "string",
                "format": "uri"
              },
              "identifier": {
                "description": "An identifier for the class or type. Suggest using '{schema short name}:{class name}'",
                "type": "string"
              }
            },
            "required": []
          },
          "citation": {
            "description": "A citation object.",
            "@type": "schema:CreativeWork",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of or title of the citation",
                "type": "string"
              },
              "identifier": {
                "description": "An identifier associated with the citation",
                "type": "string"
              },
              "pmid": {
                "description": "A pubmed identifier if available",
                "type": "string"
              },
              "doi": {
                "description": "A doi if available",
                "type": "string"
              },
              "url": {
                "description": "The url of the resource cited",
                "type": "string",
                "format": "uri"
              },
              "citeText": {
                "description": "The bibliographic citation for the referenced resource as is provided",
                "type": "string"
              }
            },
            "required": []
          },
          "sameAsObject": {
            "description": "A property object which details a property and its mapping across different schema.",
            "@type": "crosswalks:Property",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the property. Note that a property may be heavily nested in one schema, and relatively unnested in another. If the property is heavily nested, use just the unnested property name for this field, and include the hierarchy using the dot notation under 'nestedName'.",
                "type": "string"
              },
              "nestedName": {
                "description": "The nested name of the property. Note that a property may be heavily nested in one schema, and relatively unnested in another. If a property is heavily nested, include the hierarchy using the dot notation for this property, and the unnested property name for 'name'.",
                "type": "string"
              },
              "identifier": {
                "description": "An identifier for the property. Suggested format: '{schema short name}:{property name}'.",
                "type": "string"
              },
              "domainIncludes": {
                "description": "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.",
                "oneOf": [
                  {
                    "$ref": "#/definitions/classObject"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/classObject"
                    }
                  }
                ]
              },
              "rangeIncludes": {
                "description": "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.",
                "type": "array",
                "oneOf": [
                  {
                    "$ref": "#/definitions/classObject"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/classObject"
                    }
                  }
                ]
              },
              "includesTransform": {
                "oneOf": [
                    {
                      "$ref": "#/definitions/transformSpec"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/transformSpec"
                    }    
                    }
                ]
              },
              "url": {
                  "description": "The url to the property in its respective schema. Example, for something like 'owl:cardinality', it the url would be 'https://www.w3.org/TR/owl-ref/#cardinality-def'."
              },
              "isPartOf": {
                "description": "The schema or Data Element set (if it is a mix and match instead of concept set-based) to which this property belongs.",
                "oneOf": [
                  {
                    "$ref": "#/definitions/schemaObject"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/schemaObject"
                    }
                  }
                ]
              },
              "cardinality": {
                "description": "The cardinality of this property if available as defined in its respective schema. Note, that a schema may have multiple classes and the cardinality of the property may vary based on class, if this is the case the cardinality should be considered 'variable'. If it is not defined in a schema (like in schema.org), it should be considered 'unspecified.",
                "type": "string",
                "enum": [
                  "one",
                  "many",
                  "variable",
                  "unspecified"
                ]
              },
              "marginality": {
                "description": "The marginality of the property as defined in its respective schema. Note that a schema may include multiple classes and the marginality for the same property may vary between classes within the same schema. If this is the case, use: 'variable'. Otherwise, if the marginality is not specified like in schema.org, use 'unspecified'.",
                "type": "string",
                "enum": [
                  "minimal or required",
                  "recommended",
                  "optional",
                  "variable",
                  "unspecified"
                ]
              }
            },
            "required": [
              "name"
            ]
          },
          "schemaObject": {
            "description": "A schema which was included in the mapping/crosswalk.",
            "@type": "schema:CreativeWork",
            "type": "object",
            "properties": {
              "name": {
                "description": "Schema name",
                "type": "string"
              },
              "alternateName": {
                "description": "Commonly-used abbreviations or short names for the schema",
                "type": "array",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              },
              "identifier": {
                "description": "An identifier for the schema. Suggested format: '{schema short name}: {schema class name}' if class-specific, otherwise use the {schema short name}.",
                "type": "string"
              },
              "url": {
                "description": "Url of the schema",
                "type": "string",
                "format": "uri"
              },
              "version": {
                "description": "The version of the schema referenced if available.",
                "type": "string"
              },
              "citation": {
                "description": "A citation of the schema if available.",
                "type": "array",
                "anyOf": [
                  {
                    "$ref": "#/definitions/citation"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/citation"
                    }
                  },
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              }
            },
            "required": []
          }
        }
      }
    },
    {
      "@id": "crosswalks:DataTransformer",
      "@type": "rdfs:Class",
      "rdfs:comment": "This is the schema for defining a data transformation needed for converting the value of one property to be suitable for the corresponding mapped property.",
      "rdfs:label": "DataTransformer",
      "rdfs:subClassOf": {
        "@id": "schema:CreativeWork"
      }
    },
    {
      "@id": "crosswalks:includesTransform",
      "@type": "rdf:Property",
      "rdfs:comment": "One or more transformation(s) or conversion(s) needed to ensure that the value of the property is suitable for the corresponding, mapped property. The value of this property should be either unique for each direction of a property mapping, or none (for when no conversion is needed).",
      "rdfs:label": "includesTransform",
      "schema:domainIncludes": {
        "@id": "crosswalks:Property"
      },
      "schema:rangeIncludes": [
        {
          "@id": "crosswalks:DataTransformer"
        }
      ]
    },
    {
      "@id": "owl:cardinality",
      "@type": "rdf:Property",
      "rdfs:comment": "The cardinality of this property within the schema.",
      "rdfs:label": "cardinality",
      "schema:domainIncludes": {
        "@id": "crosswalks:Property"
      },
      "schema:rangeIncludes": [
        {
          "@id": "schema:Text"
        }
      ]
    },
    {
      "@id": "crosswalks:isPartOf",
      "@type": "rdf:Property",
      "rdfs:comment": "A schema to which this particular property belongs.",
      "rdfs:label": "isPartOf",
      "schema:domainIncludes": {
        "@id": "crosswalks:Property"
      },
      "schema:rangeIncludes": [
        {
          "@id": "schema:CreativeWork"
        }
      ]
    },
    {
      "@id": "crosswalks:sameAs",
      "@type": "rdf:Property",
      "rdfs:comment": "A URL or metadata object that unambiguously identifies the item.",
      "rdfs:label": "sameAs",
      "schema:domainIncludes": {
        "@id": "crosswalks:Property"
      },
      "schema:rangeIncludes": [
        {
          "@id": "crosswalks:Property"
        },
        {
          "@id": "schema:URL"
        }
      ]
    },
    {
      "@id": "crosswalks:marginality",
      "@type": "rdf:Property",
      "rdfs:comment": "The marginality (minimal/required, recommended, optional) of a property.",
      "rdfs:label": "marginality",
      "schema:domainIncludes": {
        "@id": "crosswalks:Property"
      },
      "schema:rangeIncludes": [
        {
          "@id": "schema:Text"
        }
      ]
    },
    {
      "@id": "crosswalks:nestedName",
      "@type": "rdf:Property",
      "rdfs:comment": "The nested name of a property using dot notation. If a property is heavily nested, its hierarchy may be captured using the dot notation for inclusion as the nested name. For example the name of the property 'distribution.url' should be 'url' for consistency with schema.org, but the nestedName will be 'distribution.url' for improved interpretability and interoperability.",
      "rdfs:label": "nestedName",
      "schema:domainIncludes": {
        "@id": "crosswalks:Property"
      },
      "schema:rangeIncludes": [
        {
          "@id": "schema:Text"
        }
      ]
    }
  ]
}